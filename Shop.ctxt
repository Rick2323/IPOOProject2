#BlueJ class context
comment0.params=name\ latitude\ longitude
comment0.target=Shop(java.lang.String,\ double,\ double)
comment1.params=name
comment1.target=void\ setName(java.lang.String)
comment1.text=\r\n\ Modificar\ o\ nome\ da\ loja\r\n\ \r\n\ @param\ \ name\ \ \ O\ nome\ da\ loja.\r\n
comment10.params=code
comment10.target=void\ addProductToSell(java.lang.Integer)
comment10.text=\r\n\ Adiciona\ um\ produto\ \u00E0\ lista\ de\ vendas,\ utilizando\ o\ seu\ c\u00F3digo.\r\n\ \r\n\ @param\ O\ c\u00F3digo\ do\ produto\ a\ adicionar.\r\n
comment11.params=code
comment11.target=boolean\ productCanBeSold(java.lang.Integer)
comment11.text=\r\n\ Verifica\ se\ o\ c\u00F3digo\ so\ produto\ existe\ na\ lista\ de\ vendas,\ e\ consequentemente\r\n\ se\ este\ pode\ ser\ vendido.\ (est\u00E1\ nesta\ classe\ para\ ser\ usado\ em\ testes)\r\n\ \r\n\ @param\ O\ c\u00F3digo\ do\ produto\ que\ se\ quer\ verificar.\r\n
comment12.params=code
comment12.target=void\ removeProductToSell(java.lang.Integer)
comment12.text=\r\n\ Remove\ um\ produto\ da\ lista\ de\ vendas,\ utilizando\ o\ seu\ c\u00F3digo.\r\n\ \r\n\ @param\ O\ c\u00F3digo\ do\ produto\ a\ remover.\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ Produz\ uma\ String\ com\ uma\ lista\ de\ informa\u00E7\u00E3o\ sobre\ a\ loja\r\n\ \r\n\ @return\ \ O\ texto\ com\ a\ lista\ de\ informa\u00E7\u00E3o\ sobre\ a\ loja.\r\n
comment14.params=
comment14.target=void\ show()
comment14.text=\r\n\ Mostra\ no\ ecr\u00E3\ a\ lista\ de\ informa\u00E7\u00E3o\ sobre\ a\ loja.\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ Devolve\ o\ nome\ da\ loja.\r\n\ \r\n\ @return\ nome\ da\ loja.\r\n
comment3.params=
comment3.target=double\ getLatitude()
comment3.text=\r\n\ Devolve\ a\ latitude\ da\ Loja.\r\n\ \r\n\ @return\ \ \ A\ latitude\ da\ Loja.\r\n
comment4.params=
comment4.target=double\ getLongitude()
comment4.text=\r\n\ Dovolve\ a\ longitude\ da\ Loja\ e\ retorna\ um\ n\u00FAmero\ real.\r\n\ \r\n\ @return\ \ \ A\ longitude\ da\ Loja.\r\n
comment5.params=lorry
comment5.target=void\ unloadLorry(Lorry)
comment5.text=\r\n\ Permite\ descarregar\ o\ contentor\ de\ um\ cami\u00E3o\ para\ um\ lugar\ de\ estacionamento.\r\n\ \r\n\ @param\ \ \ O\ cami\u00E3o\ a\ descarregar.\r\n
comment6.params=lorry\ containerCode
comment6.target=void\ loadLorryWithContainer(Lorry,\ int)
comment6.text=\r\n\ Permite\ carregar\ um\ dado\ cami\u00E3o\ con\ um\ contentor\ que\ esteja\ no\ parque.\r\n\ \r\n\ @param\ lorry\ Cami\u00E3o\ a\ carregar.\r\n\ @param\ containerCode\ c\u00F3digo\ do\ contentor\ que\ se\ que\ carregar.\r\n
comment7.params=containerCode
comment7.target=void\ unloadContainerFully(int)
comment7.text=\r\n\ Permite\ descarregar\ completamente\ um\ contentor\ que\ esteja\ no\ parque\ da\ loja.\r\n\ \r\n\ @param\ \ \ containerCode\ \ \ \ O\ codigo\ do\ contentor\ a\ descarregar.\r\n
comment8.params=containerCode\ packCode\ quantity
comment8.target=void\ unloadContainerSingle(int,\ int,\ int)
comment8.text=\r\n\ Permite\ descarregar\ um\ pack\ do\ contentor\ para\ o\ armaz\u00E9m\ da\ loja.\r\n\ \r\n\ @param\ containerCode\ \ \ \ O\ codigo\ do\ contentor\ dado\ por\ um\ n\u00FAmero\ inteiro.\r\n\ @param\ packCode\ \ \ \ \ \ \ \ \ O\ codigo\ do\ produto\ dado\ por\ um\ n\u00FAmero\ inteiro.\r\n\ @param\ quantity\ \ \ \ \ \ \ \ \ A\ quantidade\ de\ um\ produto\ dado\ por\ um\ n\u00FAmero\ inteiro.\r\n
comment9.params=packCode\ quantity
comment9.target=Pack\ sell(int,\ int)
comment9.text=\r\n\ Permite\ vender\ determinado\ produto\ retiramdo-o\ do\ armazem\r\n\ \r\n\ @param\ \ packCode\ \ \ \ O\ codigo\ do\ produto\ dado\ por\ um\ n\u00FAmero\ inteiro.\r\n\ @param\ \ quantity\ \ \ \ A\ quantidade\ do\ produto\ por\ um\ n\u00FAmero\ inteiro.\r\n\ @return\ \ \ \ \ O\ produto\ para\ vender.\r\n
numComments=15
