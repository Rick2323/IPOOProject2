#BlueJ class context
comment0.params=code\ quantity
comment0.target=Pack(java.lang.Integer,\ int)
comment1.params=code\ name\ weight\ volume\ quantity
comment1.target=Pack(java.lang.Integer,\ java.lang.String,\ double,\ double,\ int)
comment10.params=
comment10.target=double\ getWeight()
comment10.text=\r\n\ Permite\ obter\ o\ peso\ unit\u00E1rio\ em\ Kg\ do\ produto.\r\n\ \r\n\ @return\ \ O\ peso\ unit\u00E1rio\ do\ produto.\r\n
comment11.params=
comment11.target=double\ getVolume()
comment11.text=\r\n\ Permite\ obter\ o\ volume\ unit\u00E1rio\ em\ cm^3\ do\ produto.\r\n\ \r\n\ @return\ \ O\ volume\ unit\u00E1rio\ do\ produto.\r\n
comment12.params=numberToAdd
comment12.target=void\ addQuantity(int)
comment12.text=\r\n\ Permite\ aumentar\ a\ quantidade\ do\ produto.\r\n\ \u00C9\ feito\ atrav\u00E9s\ de\ um\ n\u00FAmero\ inteiro\ maior\ que\ zero.\r\n\ \r\n\ @param\ \ numberToAdd\ \ \ Um\ inteiro\ que\ designa\ a\ quantidade\ a\ adicionar.\r\n
comment13.params=numberToRemove
comment13.target=void\ removeQuantity(int)
comment13.text=\r\n\ Permite\ reduzir\ a\ quantidade\ do\ produto.\r\n\ \u00C9\ feito\ atrav\u00E9s\ de\ um\ n\u00FAmero\ inteiro\ maior\ que\ zero.\r\n\ \r\n\ @param\ \ numberToRemove\ \ Um\ inteiro\ que\ designa\ a\ quantidade\ a\ remover\ de\ um\ produto.\r\n
comment14.params=
comment14.target=double\ getTotalWeight()
comment14.text=\r\n\ Permite\ obter\ o\ peso\ total\ do\ produto\ em\ quilogramas\ que\ existe\ no\ pack\ e\ retorna-o\ como\ um\ n\u00FAmero\ real.\r\n\ \r\n\ \r\n\ @return\ \ \ O\ peso\ unit\u00E1rio\ em\ quilogramas\ do\ produto\ vezes\ a\ quantidade\ de\ unidades\ do\ produto.\r\n\ \r\n
comment15.params=
comment15.target=double\ getTotalVolume()
comment15.text=\r\n\ Permite\ obter\ o\ volume\ total\ do\ produto\ em\ cm3\ que\ existe\ no\ pack\ e\ retorna-o\ como\ um\ n\u00FAmero\ real.\r\n\ \r\n\ @return\ \ O\ volume\ em\ cm3\ de\ cada\ unidade\ vezes\ a\ sua\ quantidade.\r\n
comment16.params=
comment16.target=java.lang.String\ toString()
comment16.text=\r\n\ Cria\ uma\ String\ com\ a\ lista\ de\ informa\u00E7\u00E3o\ sobre\ o\ pack.\r\n\ \r\n
comment17.params=
comment17.target=void\ show()
comment2.params=code
comment2.target=boolean\ codeIsValid(java.lang.Integer)
comment3.params=quantity
comment3.target=boolean\ quantityIsValid(int)
comment4.params=
comment4.target=java.lang.Integer\ getCode()
comment4.text=\r\n\ Permite\ obter\ o\ c\u00F3digo\ do\ produto;\r\n\ \r\n\ @return\ \ \ \ O\ c\u00F3digo\ do\ produto.\r\n
comment5.params=code\ name\ weight\ volume
comment5.target=void\ registerProduct(java.lang.Integer,\ java.lang.String,\ double,\ double)
comment5.text=\r\n\ Regista\ o\ c\u00F3digo\ do\ produto\ e\ a\ este\ fica\ associado\ um\ nome,\ peso\ e\ volume.\r\n\ \r\n\ @param\ \ \ code\ \ \ \ C\u00F3digo\ do\ produto.\r\n\ @param\ \ \ name\ \ \ \ Nome\ do\ produto.\r\n\ @param\ \ \ weight\ \ Peso\ Unit\u00E1rio.\r\n\ @param\ \ \ volume\ \ Volume\ Unit\u00E1rio.\r\n
comment6.params=
comment6.target=boolean\ packHasValidCode()
comment7.params=code
comment7.target=void\ correctInvadidCode(java.lang.Integer)
comment7.text=\r\n\ Permite\ corrigir\ o\ c\u00F3digo\ do\ pack,\ caso\ o\ atual\ seja\ inv\u00E1lido\ e\ o\ novo\ v\u00E1lido.\r\n\ \r\n\ @param\ \ \ code\ \ \ \ C\u00F3digo\ do\ produto.\r\n
comment8.params=
comment8.target=int\ getQuantity()
comment8.text=\r\n\ Permite\ obter\ a\ quantidade\ em\ unidades\ do\ produto.\r\n\ \r\n\ @return\ \ A\ quantidade\ do\ produto.\r\n
comment9.params=
comment9.target=java.lang.String\ getName()
comment9.text=\r\n\ Permite\ obter\ o\ nome\ do\ produto.\r\n\ \r\n\ @return\ \ O\ nome\ do\ produto.\r\n
numComments=18
