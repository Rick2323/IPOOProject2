#BlueJ class context
comment0.params=code
comment0.target=Container(java.lang.Integer)
comment1.params=
comment1.target=boolean\ containerHasValidCode()
comment10.params=code\ quantity
comment10.target=boolean\ hasError(java.lang.Integer,\ int)
comment11.params=packsInContainer\ numberOfElements
comment11.target=java.lang.String\ quantitysOfPacksInContainer(Pack[],\ int)
comment12.params=code\ quantity
comment12.target=Pack\ copyPack(java.lang.Integer,\ int)
comment13.params=
comment13.target=java.util.ArrayList\ unloadContainerFully()
comment13.text=\r\n\ Descarrega\ totalmente\ o\ contentor.\ \r\n\ \r\n\ @return\ devolve\ um\ ArrayList\ com\ os\ packs\ que\ estavam\ dentro\ do\ contentor\r\n
comment14.params=
comment14.target=int\ getNumberOfPacks()
comment14.text=\r\n\ Permite\ obter\ o\ n\u00FAmero\ de\ produtos\ no\ contentor.\ Retorna-o\ como\ um\ n\u00FAmero\ inteiro.\r\n\ \r\n\ @return\ \ \ O\ n\u00FAmero\ de\ produtos.\r\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\r\n\ Cria\ uma\ String\ com\ a\ lista\ de\ informa\u00E7\u00E3o\ sobre\ o\ conteudo\ do\ contentor.\r\n\ \r\n
comment16.params=
comment16.target=void\ show()
comment16.text=\r\n\ Mostra\ no\ ecr\u00E3\ toda\ informa\u00E7\u00E3o\ de\ determinado\ contentor.\r\n\ \r\n
comment17.params=code
comment17.target=boolean\ codeIsValid(java.lang.Integer)
comment18.params=container
comment18.target=void\ registerContainer(Container)
comment18.text=\r\n\ Regista\ os\ contentores\ que\ recebe\ como\ par\u00E2metro\ num\ HasSet.\r\n\ \r\n\ @param\ container\ O\ Contentor\ a\ ser\ registado.\r\n
comment19.params=
comment19.target=int\ getNumberOfRegistedContainers()
comment19.text=\r\n\ Devolve\ o\ n\u00FAmero\ de\ contentores\ registados.\r\n\ \r\n\ @return\ O\ n\u00FAmero\ de\ contentores\ registados.\r\n
comment2.params=code
comment2.target=void\ correctInvadidCode(java.lang.Integer)
comment2.text=\r\n\ M\u00E9todo\ usado\ pelo\ ulitizador\ para\ corrigir\ o\ c\u00F3digo\ do\ pack.\r\n\ \r\n\ @return\ \ \ O\ codigo\ do\ contentor\r\n
comment20.params=container
comment20.target=void\ unregisterContainer(Container)
comment20.text=\r\n\ Anula\ o\ registo\ de\ um\ contentor,\ \u00E9\ usado\ o\ c\u00F3digo\ do\ mesmo\ para\ esse\ efeito.\r\n\ \r\n\ @param\ O\ c\u00F3digo\ do\ contentore\ que\ se\ pretende\ anular\ o\ registo.\r\n
comment21.params=
comment21.target=void\ clearRegistedContainers()
comment21.text=\r\n\ Limpa\ o\ HasSet\ dos\ contentores\ registados,\ \u00E9\ usado\ para\ testes.\r\n
comment22.params=
comment22.target=int\ getFreeContainerCode()
comment23.params=
comment23.target=java.lang.String\ containerString()
comment24.params=
comment24.target=void\ showRegistedContainers()
comment24.text=\r\n\ Mostra\ no\ ecr\u00E3\ toda\ informa\u00E7\u00E3o\ sobre\ os\ contentores\ registados.\r\n\ \r\n
comment3.params=
comment3.target=int\ getCode()
comment3.text=\r\n\ Permite\ obter\ o\ codigo\ de\ cada\ contentor\ que\ retorna\ como\ um\ n\u00FAmero\ inteiro.\r\n\ \r\n\ @return\ \ \ O\ codigo\ do\ contentor.\r\n
comment4.params=
comment4.target=double\ ocuppiedWeight()
comment4.text=\r\n\ Devolve\ o\ peso\ total\ que\ o\ contentor\ transporta.\r\n\ \r\n\ @return\ \ O\ peso\ total\ em\ quilogramas\ dos\ produtos\ que\ est\u00E3o\ no\ contentor.\r\n
comment5.params=
comment5.target=double\ availableWeight()
comment5.text=\r\n\ Devolve\ a\ capacidade(peso)\ dispon\u00EDvel.\r\n\r\n@return\ \ \ \ A\ capacidade\ total\ restante\ do\ contentor\ em\ quilogramas\ (peso)\ .\ \r\n
comment6.params=
comment6.target=double\ ocuppiedVolume()
comment6.text=\r\n\ Devolve\ o\ volume\ total\ que\ o\ contentor\ transporta.\r\n\ \r\n\ \r\n\ @return\ \ \ O\ volume\ total\ em\ cm^3\ dos\ produtos\ que\ est\u00E3o\ no\ contentor.\r\n
comment7.params=
comment7.target=double\ availableVolume()
comment7.text=\r\n\ Devolve\ a\ capacidade(volume)\ dispon\u00EDvel.\r\n\ \r\n\ @return\ \ \ \ \ A\ capacidade\ total\ restante\ do\ contentor\ (volume).\ \r\n
comment8.params=pack
comment8.target=void\ loadContainer(Pack)
comment8.text=\ \ \r\n\ Permite\ carregar\ o\ contentor.\ Faz\ a\ valida\u00E7\u00E3o\ do\ pack\ e\ verifica\ se\ o\ mesmo\ cabe\ em\ peso\ e\ volume\ no\ contentor.\r\n\ Devolve\ um\ texto\ no\ caso\ do\ produto\ n\u00E3o\ existir\ ou\ n\u00E3o\ caber\ no\ contentor.\r\n\ \r\n\ @param\ \ \ pack\ \ Um\ objecto\ da\ classe\ Pack.\r\n
comment9.params=code\ quantity
comment9.target=Pack\ unloadContainer(java.lang.Integer,\ int)
comment9.text=\r\n\ Permite\ descarregar\ o\ contentor,\ para\ tal\ \u00E9\ fornecido\ o\ c\u00F3digo\ e\ a\ quantidade\ do\ pack.\ S\u00F3\ \u00E9\ retirado\ do\ contentor\ um\ pack\ que\ tenha\ exatamente\ o\ mesmo\ codigo\ e\ quantidade.\ \ \r\n\ \r\n\ @param\ \ \ code\ \ \ \ O\ c\u00F3digo\ do\ produto.\r\n\ @param\ \ \ quantity\ \ \ \ A\ quantidade\ do\ produto.\r\n\ @return\ \ Um\ pack\ de\ c\u00F3digo\ e\ quantidade\ igual\ ao\ que\ foi\ introduzido\r\n
numComments=25
